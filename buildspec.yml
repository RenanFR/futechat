version: 0.2
env:
  shell: bash
phases: 
  pre_build: 
    commands: 
    - echo Logging in to Amazon ECR....
    - aws --version
    - AWS_DEFAULT_REGION=sa-east-1
    - AWS_ACCOUNT_ID=270167558056
    - APPLICATION_NAME=futechat
    - REPOSITORY_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
    - IMAGE_URI=$REPOSITORY_URI/$APPLICATION_NAME
    - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $REPOSITORY_URI     
    - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
    - IMAGE_TAG=${COMMIT_HASH:=latest}
    - curl -O https://download.java.net/java/GA/jdk18/43f95e8614114aeaa8e8a5fcf20a682d/36/GPL/openjdk-18_linux-x64_bin.tar.gz
    - curl -O https://dlcdn.apache.org/maven/maven-3/3.8.5/binaries/apache-maven-3.8.5-bin.tar.gz
    - tar xvf openjdk-18_linux-x64_bin.tar.gz
    - sudo mv jdk-18 /opt/
    - export JAVA_HOME=/opt/jdk-18
    - export PATH=${JAVA_HOME}/bin:${PATH}
    - tar xvf apache-maven-3.8.5-bin.tar.gz
    - sudo mv apache-maven-3.8.5 /opt/
    - export M2_HOME=/opt/apache-maven-3.8.5
    - export PATH=${M2_HOME}/bin:${PATH}
    - . ~/.profile
  build: 
    commands: 
    - echo Build started on `date` 
    - echo Building the Docker image... 
    - mvn clean package
    - mvn -version
    - java -version
    - echo $JAVA_HOME
    - mvn spring-boot:build-image -Dspring-boot.build-image.imageName=$APPLICATION_NAME:$IMAGE_TAG
    - docker tag $APPLICATION_NAME:$IMAGE_TAG $IMAGE_URI:$IMAGE_TAG 
  post_build: 
    commands: 
    - echo Build completed on `date` 
    - echo pushing to repo
    - docker push $IMAGE_URI:$IMAGE_TAG
    - echo Writing image definitions file... 
    - printf '[{"name":"futechat", "imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
artifacts:
  files:
    - imagedefinitions.json