version: 0.2
env:
  secrets-manager:
    DOCKERHUB_PASS: "/dockerhub/credentials/pass"
    DOCKERHUB_USERNAME: "/dockerhub/credentials/user"
phases: 
  pre_build: 
    commands: 
    - echo Logging in to Amazon ECR....
    - curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
    - unzip awscliv2.zip
    - sudo ./aws/install
    - aws --version
    - AWS_DEFAULT_REGION=sa-east-1
    - AWS_ACCOUNT_ID=270167558056
    - APPLICATION_NAME=futechat
    - REPOSITORY_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$APPLICATION_NAME
    - echo $AWS_DEFAULT_REGION
    - echo $AWS_ACCOUNT_ID
    - echo $APPLICATION_NAME
    - echo $REPOSITORY_URI
    - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username $DOCKERHUB_USERNAME --password $DOCKERHUB_PASS     
    # Get commit hash value to tag the image
    - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
    - IMAGE_TAG=${COMMIT_HASH:=latest}
#    - apt-get install wget
#    - dpkg -l | grep wget
#    - wget --version
#    - curl -O https://download.java.net/java/GA/jdk18/43f95e8614114aeaa8e8a5fcf20a682d/36/GPL/openjdk-18_linux-x64_bin.tar.gz
#    - tar xvf openjdk-18_linux-x64_bin.tar.gz
#    - sudo mv jdk-18 /opt/
#    - sudo tee /etc/profile.d/jdk18.sh <<EOF
#    - export JAVA_HOME=/opt/jdk-18
#    - export PATH=\$PATH:\$JAVA_HOME/bin
#    - wget https://dlcdn.apache.org/maven/maven-3/3.8.5/binaries/apache-maven-3.8.5-bin.tar.gz -P /tmp
#    - sudo tar xf /tmp/apache-maven-*.tar.gz -C /opt
#    - sudo ln -s /opt/apache-maven-3.8.5 /opt/maven
#    - sudo nano /etc/profile.d/maven.sh
#    - export M2_HOME=/opt/maven
#    - export MAVEN_HOME=/opt/maven
#    - export PATH=${M2_HOME}/bin:${PATH}
#    - sudo chmod +x /etc/profile.d/maven.sh
    # Replace with your application name
    # Replace with this 435320931996.dkr.ecr.ap-south-1.amazonaws.com to your repository URI
  build: 
    commands: 
    - echo Build started on `date` 
    - echo Building the Docker image... 
#    - mvn clean package
    - mvn -version
    - java -version
    - echo $JAVA_HOME
#    - docker build -t $APPLICATION_NAME:$IMAGE_TAG .
#    - docker tag $APPLICATION_NAME:$IMAGE_TAG $REPOSITORY_URI:$IMAGE_TAG 
  post_build: 
    commands: 
    - echo Build completed on `date` 
    - echo pushing to repo
#    - docker push $REPOSITORY_URI:$IMAGE_TAG
    - echo Writing image definitions file... 
    # Give your container name
    - printf '[{"name":"futechat", "imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
artifacts:
  files:
    - imagedefinitions.json